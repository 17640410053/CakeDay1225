<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <!--1.springIOC注解-->
    <context:component-scan base-package="com.tom.cake.service"/>
    <!--2.引入db.properties文件-->
    <context:property-placeholder location="classpath:db.properties"/>
    <!--3.DataSource-->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="driverClassName" value="${db_driver}"/>
        <property name="url" value="${db_url}"/>
        <property name="username" value="${db_username}"/>
        <property name="password" value="${db_password}"/>
    </bean>
    <!--SqlSessionFactory-->
    <bean id="sessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
    </bean>

    <!--MapperScannerConfigurer,为mapper接口生成代理对像-->
    <bean id="mapperScanner" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="sqlSessionFactoryBeanName" value="sessionFactory"/>
        <property name="basePackage" value="com.tom.cake.mapper"/>
    </bean>

    <!--TransactionManager-->
    <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!--注解事务-->
    <!-- <tx:annotation-driven transaction-manager="txManager"></tx:annotation-driven>-->
    <!--事务策略-->
    <tx:advice transaction-manager="txManager" id="txAdvice">
        <tx:attributes>
            <tx:method name="add*" isolation="DEFAULT" propagation="REQUIRES_NEW"/>
            <tx:method name="save*" isolation="DEFAULT" propagation="REQUIRES_NEW"/>
            <tx:method name="insert*" isolation="DEFAULT" propagation="REQUIRES_NEW"/>
            <tx:method name="remove*" isolation="DEFAULT" propagation="REQUIRES_NEW"/>
            <tx:method name="delete*" isolation="DEFAULT" propagation="REQUIRES_NEW"/>
            <tx:method name="modify*" isolation="DEFAULT" propagation="REQUIRES_NEW"/>
            <tx:method name="update*" isolation="DEFAULT" propagation="REQUIRES_NEW"/>
            <tx:method name="*" read-only="true"/>
        </tx:attributes>
    </tx:advice>

    <!--aop事务管理-->
    <aop:config>
        <aop:pointcut id="txPointcut" expression="execution(* com.tom.cake.service.*.*(..))"/>
        <aop:advisor advice-ref="txAdvice" pointcut-ref="txPointcut"/>
    </aop:config>

</beans>